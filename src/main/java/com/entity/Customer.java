/*
 *Under Development
 * Customer Entity has all variables and it's setter and getter methods as well the NamedQueries
 * It handles the relationship based notataion not using the queries
 * 
 */
package com.entity;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author Badal
 */
@Entity
@NamedQueries({
    @NamedQuery(name = Customer.FIND_ALL, query = "SELECT c FROM Customer c"),
    @NamedQuery(name = Customer.FIND_CUSTOMER, query = "SELECT c FROM Customer c WHERE c.email = ?1"),
    @NamedQuery(name = Customer.SEARCH_BY_NAME, query = "SELECT c FROM Customer c WHERE c.firstName LIKE ?1"),
    @NamedQuery(name = Customer.LOGIN_VERIFICATION, query = "SELECT c FROM Customer c WHERE c.email = ?1 AND c.password = ?2"),
    @NamedQuery(name = Customer.UPDATE_CUSTOMER, query = "UPDATE Customer c SET c.firstName = ?1, c.lastName=?2, c.medicareNumber=?3, c.stateName=?4, c.city=?5, c.dateOfBirth=?6, c.postCode=?7, c.address=?8, c.phone=?9,c.password=?10 WHERE c.email = ?11")
})
public class Customer implements Serializable {

    //variables declaration
    private static final long serialVersionUID = 1L;
    public static final String FIND_ALL = "Customer.findAll";
    public static final String SEARCH = "Customer.search";
    public static final String SEARCH_BY_NAME = "Customer.searchByName";
    public static final String LOGIN_VERIFICATION = "Customer.loginVerification";
    public static final String UPDATE_CUSTOMER = "Customer.customerUpdate";
    public static final String FIND_CUSTOMER = "Customer.findCustomer";
    
    // ID is primary key and autogenerated
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;    
    private String firstName;
    private String lastName;
    private String medicareNumber;
    // email column is unique
    @Column(unique=true)
    private String email;
    private String stateName;
     private String city;
    private String address;
    private String postCode;
    private String phone;
    private String password;
    
    @Temporal(javax.persistence.TemporalType.DATE)
    private Date dateOfBirth;   
    
  
    // used timestamp to store the current date and time for customer
    @Basic(optional = false)
    @Column(name = "DATE_CREATED", insertable = false, updatable = false, nullable = false,columnDefinition="TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
    @Temporal(TemporalType.TIMESTAMP)
    private Date creationDate;
    
     // Getter and Setter methods for all variables
    
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getMedicareNumber() {
        return medicareNumber;
    }

    public void setMedicareNumber(String medicareNumber) {
        this.medicareNumber = medicareNumber;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getStateName() {
        return stateName;
    }

    public void setStateName(String stateName) {
        this.stateName = stateName;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public Date getDateOfBirth() {
        return dateOfBirth;
    }

    public void setDateOfBirth(Date dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

     
    public Date getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }


    public String getPostCode() {
        return postCode;
    }

    public void setPostCode(String postCode) {
        this.postCode = postCode;
    }
    
    
    
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Customer)) {
            return false;
        }
        Customer other = (Customer) object;
        if((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.entity.Customer[ id=" + id + " ]";
    }
    
}

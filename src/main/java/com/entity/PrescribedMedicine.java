/*
 * PrescribedMedicine Entity has all variables and it's setter and getter methods as well the NamedQueries
 * It handles the relationship based notataion not using the queries
 * 
 */
package com.entity;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author Badal
 */
@Entity
@NamedQueries({
    @NamedQuery(name = PrescribedMedicine.FIND_ALL_PRESCRIBED_MEDICINE, query = "SELECT p FROM PrescribedMedicine p"),
    @NamedQuery(name = PrescribedMedicine.FIND_ALL_PRESCRIBED_MEDICINE_BY_CUSTOMER, query = "SELECT p FROM PrescribedMedicine p WHERE p.customer.id = ?1"),                                                                                                                                                                              
    @NamedQuery(name = PrescribedMedicine.SEARCH_BY_ID, query = "SELECT p FROM PrescribedMedicine p WHERE p.id LIKE ?1"),
})
public class PrescribedMedicine implements Serializable {

    //variables declaration
    
    private static final long serialVersionUID = 1L;
    public static final String FIND_ALL_PRESCRIBED_MEDICINE = "PrescribedMedicine.findAllMedicine";
    public static final String SEARCH_BY_ID = "PrescribedMedicine.searchById";
     public static final String FIND_ALL_PRESCRIBED_MEDICINE_BY_CUSTOMER = "PrescribedMedicine.findByCustomer";
    
     // ID is primary key and autogenerated 
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    private String medicineDescrption;
    private String fileUploadLink;
    private int orderStatus=0;
    
     // used to store timestamp for order
    @Basic(optional = false)
    @Column(name = "DATE_CREATED", insertable = false, updatable = false, nullable = false,columnDefinition="TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
    @Temporal(TemporalType.TIMESTAMP)
    private Date orderDate;
    
    // join the column between customer and prescribedmedicine table
    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "customeridfk")
    private Customer customer;
    
     // Getter and Setter methods for all variables
    
    public Customer getCustomer() {
        return customer;
    }
    
    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getMedicineDescrption() {
        return medicineDescrption;
    }

    public void setMedicineDescrption(String medicineDescrption) {
        this.medicineDescrption = medicineDescrption;
    }

    public String getFileUploadLink() {
        return fileUploadLink;
    }

    public void setFileUploadLink(String fileUploadLink) {
        this.fileUploadLink = fileUploadLink;
    }

    public int getOrderStatus() {
        return orderStatus;
    }

    public void setOrderStatus(int orderStatus) {
        this.orderStatus = orderStatus;
    }

    public Date getOrderDate() {
        return orderDate;
    }

    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }
    

    @Override
    public String toString() {
        return "com.entity.PrescribedMedicine[ id=" + id + " ]";
    }
    
}
